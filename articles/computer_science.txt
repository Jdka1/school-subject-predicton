
Computer science is the study of computation, automation, and information.[1] Computer science spans theoretical disciplines (such as algorithms, theory of computation, information theory, and automation) to practical disciplines (including the design and implementation of hardware and software).[2][3][4] Computer science is generally considered an area of academic research and distinct from computer programming.[5]
Algorithms and data structures are central to computer science.[6]
The theory of computation concerns abstract models of computation and general classes of problems that can be solved using them. The fields of cryptography and computer security involve studying the means for secure communication and for preventing security vulnerabilities. Computer graphics and computational geometry address the generation of images. Programming language theory considers different ways to describe computational processes, and database theory concerns the management of repositories of data. Human–computer interaction investigates the interfaces through which humans and computers interact, and software engineering focuses on the design and principles behind developing software. Areas such as operating systems, networks and embedded systems investigate the principles and design behind complex systems. Computer architecture describes the construction of computer components and computer-operated equipment. Artificial intelligence and machine learning aim to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, planning and learning found in humans and animals. Within artificial intelligence, computer vision aims to understand and process image and video data, while natural language processing aims to understand and process textual and linguistic data.
The fundamental concern of computer science is determining what can and cannot be automated.[7][8][9][10][11] The Turing Award is generally recognized as the highest distinction in computer science.[12][13]
The earliest foundations of what would become computer science predate the invention of the modern digital computer. Machines for calculating fixed numerical tasks such as the abacus have existed since antiquity, aiding in computations such as multiplication and division. Algorithms for performing computations have existed since antiquity, even before the development of sophisticated computing equipment.[16]
Wilhelm Schickard designed and constructed the first working mechanical calculator in 1623.[17] In 1673, Gottfried Leibniz demonstrated a digital mechanical calculator, called the Stepped Reckoner.[18] Leibniz may be considered the first computer scientist and information theorist, because of various reasons, including the fact that he documented the binary number system. In 1820, Thomas de Colmar launched the mechanical calculator industry[note 1] when he invented his simplified arithmometer, the first calculating machine strong enough and reliable enough to be used daily in an office environment. Charles Babbage started the design of the first automatic mechanical calculator, his Difference Engine, in 1822, which eventually gave him the idea of the first programmable mechanical calculator, his Analytical Engine.[19] He started developing this machine in 1834, and "in less than two years, he had sketched out many of the salient features of the modern computer".[20] "A crucial step was the adoption of a punched card system derived from the Jacquard loom"[20] making it infinitely programmable.[note 2] In 1843, during the translation of a French article on the Analytical Engine, Ada Lovelace wrote, in one of the many notes she included, an algorithm to compute the Bernoulli numbers, which is considered to be the first published algorithm ever specifically tailored for implementation on a computer.[21] Around 1885, Herman Hollerith invented the tabulator, which used punched cards to process statistical information; eventually his company became part of IBM. Following Babbage, although unaware of his earlier work, Percy Ludgate in 1909 published[22] the 2nd of the only two designs for mechanical analytical engines in history. In 1937, one hundred years after Babbage's impossible dream, Howard Aiken convinced IBM, which was making all kinds of punched card equipment and was also in the calculator business[23] to develop his giant programmable calculator, the ASCC/Harvard Mark I, based on Babbage's Analytical Engine, which itself used cards and a central computing unit. When the machine was finished, some hailed it as "Babbage's dream come true".[24]

During the 1940s, with the development of new and more powerful computing machines such as the Atanasoff–Berry computer and ENIAC, the term computer came to refer to the machines rather than their human predecessors.[25] As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study computation in general. In 1945, IBM founded the Watson Scientific Computing Laboratory at Columbia University in New York City. The renovated fraternity house on Manhattan's West Side was IBM's first laboratory devoted to pure science. The lab is the forerunner of IBM's Research Division, which today operates research facilities around the world.[26] Ultimately, the close relationship between IBM and Columbia University was instrumental in the emergence of a new scientific discipline, with Columbia offering one of the first academic-credit courses in computer science in 1946.[27] Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s.[28][29] The world's first computer science degree program, the Cambridge Diploma in Computer Science, began at the University of Cambridge Computer Laboratory in 1953. The first computer science department in the United States was formed at Purdue University in 1962.[30] Since practical computers became available, many applications of computing have become distinct areas of study in their own rights.Although first proposed in 1956,[31] the term "computer science" appears in a 1959 article in Communications of the ACM,[32]
in which Louis Fein argues for the creation of a Graduate School in Computer Sciences analogous to the creation of Harvard Business School in 1921.[33] Louis justifies the name by arguing that, like management science, the subject is applied and interdisciplinary in nature, while having the characteristics typical of an academic discipline.[32]
His efforts, and those of others such as numerical analyst George Forsythe, were rewarded: universities went on to create such departments, starting with Purdue in 1962.[34] Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed.[35] Certain departments of major universities prefer the term computing science, to emphasize precisely that difference. Danish scientist Peter Naur suggested the term datalogy,[36] to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. An alternative term, also proposed by Naur, is data science; this is now used for a multi-disciplinary field of data analysis, including statistics and databases.
In the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the Communications of the ACM—turingineer, turologist, flow-charts-man, applied meta-mathematician, and applied epistemologist.[37] Three months later in the same journal, comptologist was suggested, followed next year by hypologist.[38] The term computics has also been suggested.[39] In Europe, terms derived from contracted translations of the expression "automatic information" (e.g. "informazione automatica" in Italian) or "information and mathematics" are often used, e.g. informatique (French), Informatik (German), informatica (Italian, Dutch), informática (Spanish, Portuguese), informatika (Slavic languages and Hungarian) or pliroforiki (πληροφορική, which means informatics) in Greek. Similar words have also been adopted in the UK (as in the School of Informatics, University of Edinburgh).[40] "In the U.S., however, informatics is linked with applied computing, or computing in the context of another domain."[41]
A folkloric quotation, often attributed to—but almost certainly not first formulated by—Edsger Dijkstra, states that "computer science is no more about computers than astronomy is about telescopes."[note 3] The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of computer hardware is usually considered part of computer engineering, while the study of commercial computer systems and their deployment is often called information technology or information systems. However, there has been exchange of ideas between the various computer-related disciplines. Computer science research also often intersects other disciplines, such as cognitive science, linguistics, mathematics, physics, biology, Earth science, statistics, philosophy, and logic.
Computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines, with some observers saying that computing is a mathematical science.[28] Early computer science was strongly influenced by the work of mathematicians such as Kurt Gödel, Alan Turing, John von Neumann, Rózsa Péter and Alonzo Church and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic, category theory, domain theory, and algebra.[31]
The relationship between Computer Science and Software Engineering is a contentious issue, which is further muddied by disputes over what the term "Software Engineering" means, and how computer science is defined.[42] David Parnas, taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.[43]
The academic, political, and funding aspects of computer science tend to depend on whether a department is formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science. Both types of departments tend to make efforts to bridge the field educationally if not across all research.

Despite the word "science" in its name, there is debate over whether or not computer science is a discipline of science, mathematics, or engineering.[44] Allen Newell and Herbert A. Simon argued in 1975, Computer science is an empirical discipline. We would have called it an experimental science, but like astronomy, economics, and geology, some of its unique forms of observation and experience do not fit a narrow stereotype of the experimental method. Nonetheless, they are experiments. Each new machine that is built is an experiment. Actually constructing the machine poses a question to nature; and we listen for the answer by observing the machine in operation and analyzing it by all analytical and measurement means available.[44] It has since been argued that computer science can be classified as an empirical science since it makes use of empirical testing to evaluate the correctness of programs, but a problem remains in defining the laws and theorems of computer science (if any exist) and defining the nature of experiments in computer science.[44] Proponents of classifying computer science as an engineering discipline argue that the reliability of computational systems is investigated in the same way as bridges in civil engineering and airplanes in aerospace engineering.[44] They also argue that while empirical sciences observe what presently exists, computer science observes what is possible to exist and while scientists discover laws from observation, no proper laws have been found in computer science and it is instead concerned with creating phenomena.[44]
Proponents of classifying computer science as a mathematical discipline argue that computer programs are physical realizations of mathematical entities and programs can be deductively reasoned through mathematical formal methods.[44] Computer scientists Edsger W. Dijkstra and Tony Hoare regard instructions for computer programs as mathematical sentences and interpret formal semantics for programming languages as mathematical axiomatic systems.[44]
A number of computer scientists have argued for the distinction of three separate paradigms in computer science. Peter Wegner argued that those paradigms are science, technology, and mathematics.[45] Peter Denning's working group argued that they are theory, abstraction (modeling), and design.[46] Amnon H. Eden described them as the "rationalist paradigm" (which treats computer science as a branch of mathematics, which is prevalent in theoretical computer science, and mainly employs deductive reasoning), the "technocratic paradigm" (which might be found in engineering approaches, most prominently in software engineering), and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences,[47] identifiable in some branches of artificial intelligence).[48]
Computer science focuses on methods involved in design, specification, programming, verification, implementation and testing of human-made computing systems.[49]
Computer science is no more about computers than astronomy is about telescopes.As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.[50][51]
CSAB, formerly called Computing Sciences Accreditation Board—which is made up of representatives of the Association for Computing Machinery (ACM), and the IEEE Computer Society (IEEE CS)[52]—identifies four areas that it considers crucial to the discipline of computer science: theory of computation, algorithms and data structures, programming methodology and languages, and computer elements and architecture. In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, human–computer interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.[50]
Theoretical Computer Science is mathematical and abstract in spirit, but it derives its motivation from the practical and everyday computation. Its aim is to understand the nature of computation and, as a consequence of this understanding, provide more efficient methodologies.
According to Peter Denning, the fundamental question underlying computer science is, "What can be automated?"[28] Theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, computability theory examines which computational problems are solvable on various theoretical models of computation. The second question is addressed by computational complexity theory, which studies the time and space costs associated with different approaches to solving a multitude of computational problems.
The famous P = NP? problem, one of the Millennium Prize Problems,[53] is an open problem in the theory of computation.
Information theory, closely related to probability and statistics, is related to the quantification of information. This was developed by Claude Shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data.[54]
Coding theory is the study of the properties of codes (systems for converting information from one form to another) and their fitness for a specific application. Codes are used for data compression, cryptography, error detection and correction, and more recently also for network coding. Codes are studied for the purpose of designing efficient and reliable data transmission methods.
[55]
Data structures and algorithms are the studies of commonly used computational methods and their computational efficiency.
Programming language theory is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of programming languages and their individual features. It falls within the discipline of computer science, both depending on and affecting mathematics, software engineering, and linguistics. It is an active research area, with numerous dedicated academic journals.
Formal methods are a particular kind of mathematically based technique for the specification, development and verification of software and hardware systems.[56] The use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design. They form an important theoretical underpinning for software engineering, especially where safety or security is involved. Formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing. For industrial use, tool support is required. However, the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems, where safety or security is of utmost importance. Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages, automata theory, and program semantics, but also type systems and algebraic data types to problems in software and hardware specification and verification.
Artificial intelligence (AI) aims to or is required to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, learning, and communication found in humans and animals. From its origins in cybernetics and in the Dartmouth Conference (1956), artificial intelligence research has been necessarily cross-disciplinary, drawing on areas of expertise such as applied mathematics, symbolic logic, semiotics, electrical engineering, philosophy of mind, neurophysiology, and social intelligence. AI is associated in the popular mind with robotic development, but the main field of practical application has been as an embedded component in areas of software development, which require computational understanding. The starting point in the late 1940s was Alan Turing's question "Can computers think?", and the question remains effectively unanswered, although the Turing test is still used to assess computer output on the scale of human intelligence. But the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data.
Computer architecture, or digital computer organization, is the conceptual design and fundamental operational structure of a computer system. It focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory.[57] Computer engineers study computational logic and design of computer hardware, from individual processor components, microcontrollers, personal computers to supercomputers and embedded systems. The term “architecture” in computer literature can be traced to the work of Lyle R. Johnson and Frederick P. Brooks, Jr., members of the Machine Organization department in IBM's main research center in 1959.
Concurrency is a property of systems in which several computations are executing simultaneously, and potentially interacting with each other.[58] A number of mathematical models have been developed for general concurrent computation including Petri nets, process calculi and the Parallel Random Access Machine model.[59] When multiple computers are connected in a network while using concurrency, this is known as a distributed system. Computers within that distributed system have their own private memory, and information can be exchanged to achieve common goals.[60]
This branch of computer science aims to manage networks between computers worldwide.
Computer security is a branch of computer technology with the objective of protecting information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users.
Historical cryptography is the art of writing and deciphering secret messages. Modern cryptography is the scientific study of problems relating to distributed computations that can be attacked.[61] Technologies studied in modern cryptography include symmetric and asymmetric encryption, digital signatures, cryptographic hash functions, key-agreement protocols, blockchain, zero-knowledge proofs, and garbled circuits.
A database is intended to organize, store, and retrieve large amounts of data easily. Digital databases are managed using database management systems to store, create, maintain, and search data, through database models and query languages. Data mining is a process of discovering patterns in large data sets.
Computer graphics is the study of digital visual contents and involves the synthesis and manipulation of image data. The study is connected to many other fields in computer science, including computer vision, image processing, and computational geometry, and is heavily applied in the fields of special effects and video games.
Information can take the form of images, sound, video or other multimedia. Bits of information can be streamed via signals. Its processing is the central notion of informatics, the European view on computing, which studies information processing algorithms independently of the type of information carrier - whether it is electrical, mechanical or biological. This field plays important role in information theory, telecommunications, information engineering and has applications in medical image computing and speech synthesis, among others. What is the lower bound on the complexity of fast Fourier transform algorithms? is one of unsolved problems in theoretical computer science.
Scientific computing (or computational science) is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems. A major usage of scientific computing is simulation of various processes, including computational fluid dynamics, physical, electrical, and electronic systems and circuits, as well as societies and social situations (notably war games) along with their habitats, among many others. Modern computers enable optimization of such designs as complete aircraft. Notable in electrical and electronic circuit design are SPICE,[62] as well as software for physical realization of new (or modified) designs. The latter includes essential design software for integrated circuits.[63]
Social computing is an area that is concerned with the intersection of social behavior and computational systems. Human–computer interaction research develops theories, principles, and guidelines for user interface designers.
Software engineering is the study of designing, implementing, and modifying the software in order to ensure it is of high quality, affordable, maintainable, and fast to build. It is a systematic approach to software design, involving the application of engineering practices to software. Software engineering deals with the organizing and analyzing of software—it doesn't just deal with the creation or manufacture of new software, but its internal arrangement and maintenance. For example software testing, systems engineering, technical debt and software development processes.
The philosopher of computing Bill Rapaport noted three Great Insights of Computer Science:[64]
Programming languages can be used to accomplish different tasks in different ways. Common programming paradigms include:
Many languages offer support for multiple paradigms, making the distinction more a matter of style than of technical capabilities.[70]
Conferences are important events for computer science research. During these conferences, researchers from the public and private sectors present their recent work and meet. Unlike in most other academic fields, in computer science, the prestige of conference papers is greater than that of journal publications.[71][72] One proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results, a task better handled by conferences than by journals.[73]
Computer Science, known by its near synonyms, Computing, Computer Studies, has been taught in UK schools since the days of batch processing, mark sensitive cards and paper tape but usually to a select few students.[74] In 1981, the BBC produced a micro-computer and classroom network and Computer Studies became common for GCE O level students (11–16-year-old), and Computer Science to A level students. Its importance was recognised, and it became a compulsory part of the National Curriculum, for Key Stage 3 & 4. In September 2014 it became an entitlement for all pupils over the age of 4.[75]
In the US, with 14,000 school districts deciding the curriculum, provision was fractured.[76] According to a 2010 report by the Association for Computing Machinery (ACM) and Computer Science Teachers Association (CSTA), only 14 out of 50 states have adopted significant education standards for high school computer science.[77] According to a 2021 report, only 51% of high schools in the US offer computer science.[78]
Israel, New Zealand, and South Korea have included computer science in their national secondary education curricula,[79][80] and several others are following.[81]

Computer Sciences Corporation (CSC) was an American multinational corporation that provided information technology (IT) services and professional services. On April 3, 2017, it merged with the Enterprise Services line of business of HP Enterprise (formerly Electronic Data Systems) to create DXC Technology.[2][3]
CSC was founded in April 1959 in Los Angeles, California, by Roy Nutt and Fletcher Jones.[4] CSC initially provided programming tools such as assembler and compiler software.[5]
In the 1960s, CSC provided software programming services to major computer manufacturers like IBM and Honeywell and secured their first contracts for the U.S. public sector with NASA (among others).[5]
By 1963, CSC became the largest software company in the United States and the first software company to be listed on the American Stock Exchange.[6] By the end of 1968, CSC was listed on the New York Stock Exchange and had operations in Canada, India, the United Kingdom, Germany, Spain, Italy, Brazil, and the Netherlands.
In 1967, CSC set up Computicket Corp. to compete in the fledgling electronic ticket market competing with Ticketron but lost $13 million and discontinued the service in 1970.[7]
In the 1970s and 1980s, CSC expanded globally winning large contracts for the finance and defense industries and through acquisitions in Europe and Australia.
In 2000 CSC founded a joint-venture called Innovative Banking Solutions AG[8] in Wiesbaden, Germany to market their newly developed SAP solution for mortgage companies.
Since its beginnings in 1959, company headquarters had been in California.  On March 29, 2008, the corporate headquarters of the company were relocated from El Segundo, California, to Falls Church, Virginia.[9][10]
CSC has been a Fortune 500 Company since 1995,[11] coming in at 162 in the 2012 rankings.[12]
In fiscal 2013, CSC acquired ServiceMesh (cloud management) for $282M, Infochimps (a big data platform) for $27M, 42Six (analytics for national intelligence) for $35 million, iSOFT (application solutions) for cash and debt, and AppLabs (application testing) for $171M.[13]
In May 2015, CSC announced plans to split the public sector business from its commercial and international business.[14]  In August, it was announced that CSC's Government Service business would merge with SRA International to form a new company — CSRA—at the end of November 2015.[15]
In July 2015, CSC and HCL Technologies announced the signing of a joint venture agreement to form a banking software and services company, Celeriti FinTech.[16][17]
In September 2015, CSC closed the acquisition of Fixnetix, a provider of front-office managed trading solutions in capital markets.[18] CSC also acquired Fruition Partners, a provider of technology-enabled solutions for the service-management sector during the month.[19]
In November 2015, CSC agreed to acquire the shares of UXC, an IT services company based in Australia in a deal valued at A$427.6 million (US$309 million).[20]
In December 2015, business technology and services provider, Xchanging, agreed to be purchased by CSC.[21]
In February 2016, CSC announced it was moving its headquarters to Tysons, Fairfax County's central business district, just a few miles from Annandale.[22]
On April 3, 2017, it merged with  HPE Enterprise Services to create DXC Technology.[2][3]
CSC ranked among the leading IT service providers in the world.[23][24][25] Geographically, CSC had major operations throughout North America, Europe, Asia, and Australia.
The company operated in three broad service lines or sectors until the 2015 divestment of NPS, its public sector:
The company  made several acquisitions, including DynCorp in 2003[29][30] and Covansys Corporation in 2007.[31]
Computer Science and Engineering (CSE) is an academic program at many universities which comprises scientific and engineering aspects of computing. CSE is also a term often used in Europe to translate the name of engineering informatics academic programs. It is offered in both Undergraduate as well Postgraduate with specializations.[1]
Academic programs vary between colleges. Undergraduate Courses usually include programming, algorithms and data structures, computer architecture, operating systems, computer networks, parallel computing, embedded systems, algorithms design, circuit analysis and electronics, digital logic and processor design, computer graphics, scientific computing, software engineering, database systems, digital signal processing, virtualization, computer simulations and games programming. CSE programs also include core subjects of theoretical computer science such as theory of computation, numerical methods, machine learning, programming theory and paradigms.[2] Modern academic programs also cover emerging computing fields like image processing, data science, robotics, bio-inspired computing, computational biology, autonomic computing and artificial intelligence.[3] Most of the above CSE areas require initial mathematical knowledge, hence the first year of study is dominated by mathematical courses, primarily discrete mathematics, mathematical analysis, linear algebra, probability, and statistics, as well as the basics of Electrical and electronic engineering, physics - field theory, and electromagnetism.[1][4]
Computer science education  or computing education is the science and art of teaching and learning of computer science,[1][2] computing[3][4][5][6] and computational thinking.[7][8][9] As a subdiscipline of pedagogy it also addresses the wider impact of computer science in society through its intersection with philosophy, psychology, linguistics, natural sciences, and mathematics. In comparison to  science education and mathematics education, computer science (CS) education is a much younger field.[10] In the history of computing, digital computers were only built from around the 1940s – although computation has been around for centuries since the invention of analog computers.[11]
Another differentiator of computer science education is that it has primarily only been taught at university level until recently, with some notable exceptions in Israel, Poland and the United Kingdom with the BBC Micro in the 1980s as part of Computer science education in the United Kingdom.[6][12] Computer science has been a part of the school curricula from age 14 or age 16 in a few countries for a few decades, but has typically as an elective subject.
Primary and secondary computer science education is relatively new in the United States with many K-12 CS teachers facing obstacles to integrating CS instruction such as professional isolation, limited CS professional development resources, and low levels of CS teaching self-efficacy.[13][14][15] According to a 2021 report, only 51% of high schools in the US offer computer science.[16]
Elementary CS teachers in particular have lower CS teaching efficacy and have fewer chances to implement CS into their instruction than their middle and high school peers.[13] Connecting CS teachers to resources and peers using methods such as Virtual Communities of Practice has been shown to help CS and STEM teachers improve their teaching self-efficacy and implement CS topics into student instruction. [13][14]
Educational research on computing and teaching methods in computer science is usually known as Computing Education Research.[5][17] The Association for Computing Machinery (ACM) runs a Special Interest Group (SIG) on Computer science education known as SIGCSE which celebrated its 50th anniversary in 2018, making it one of the oldest and longest running ACM Special Interest Groups.[18]
An outcome of computing education research are Parsons problems.[citation needed]
In many countries, there is a significant gender gap in computer science education. In 2015, 15.3% of computer science students graduating from non-doctoral granting institutions in the US were women while at doctoral granting institutions, the figure was 16.6%.[19] The number of female PhD recipients in the US was 19.3% in 2018.[20] In almost everywhere in the world, less than 20% of the computer science graduates are female.[21] This problem mainly arises due to the lack of interests of girls in computing starting from the primary level. Despite numerous efforts by programs specifically designed to increase the ratio of women in this field, no significant improvement has been observed. Furthermore, a declining trend has been noticed in the involvement of women in past decades.[22] The main reason for the failure of these programs is because almost all of them focused on girls in high school or higher levels of education. Researchers argue that by then women have already made up their mind and stereotypes start to form about computer scientists. Computer Science is perceived as a male dominated field, pursued by people who are nerdy and lack social skills.[22] All these characteristics seem to be more damaging for a woman as compared to a man. Therefore, in order to break these stereotypes and to engage more women in computer science, it is crucial that there are special outreach programs designed to develop interest in girls starting at the middle school level and prepare them for a academic track towards the hard sciences.[21]
Evidently, there are a few countries in Asia and Africa where these stereotypes do not exist and women are encouraged for a career in science starting at the primary level, thus resulting in a gender gap that is virtually nonexistent. In 2011, women earned half of the computer science degrees in Malaysia.[23] In 2001, 55 percent of computer science graduates in Guyana were women.[24]
The Computer Science Teachers Association (CSTA) is a professional association whose mission to “empower, engage and advocate for K-12 CS teachers worldwide.” It supports and encourages education in the field of computer science and related areas.  Started in 2004, CSTA supports computer science education in elementary schools, middle schools, high schools, higher education, and industry.[1] It sponsors the Computer Science Honor Society.
Together with the Association for Computing Machinery (ACM), the CSTA offers the ACM/CSTA Cutler-Bell Prize in High School Computing. The award provides four $10,000 scholarships to each of four winners along with travel to a reception each February.[2]
CSTA publishes a set of recommended Computer Science Standards for kindergarten through high school.[3]
CSTA the Association for Computing Machinery publish an interactive State-By-State map showing the degree to which the recommended computer science standards have been included in the state educational standards.[4]
CSTA recommendations for computer science education include beginning introductory lessons as early as kindergarten.[5] A recent report by Association for Computing Machinery and the CSTA, Running on Empty: The Failure to Teach K-12 Computer Science in the Digital Age, found that in the United States, most high schools count computer science as an elective and most secondary schools have few educational standards related to computer science.[6]
CSTA is one of the participating organizations in the Code.org Advocacy Coalition (previously called Computing in the Core (CinC)).[7] 
The Code.org Advocacy Coalition is a group of organizations that works on public outreach and advocacy to encourage additional support for computer science in the core curriculum and includes members such as Microsoft, Google, Facebook, Anita Borg Institute for Women and Technology, Computing Research Association, and others.[8]
CSTA has more than 50 chapters in the United States[9] and international affiliates in Israel, New Zealand, and the United Kingdom.[10]
CSTA publishes a monthly newsletter, the CSTA Voice, that highlights issues related to computer science education.[11]
The 2022-23 CSTA Board of Directors[12] consists of:
Dan Blier
Board Chair, School District Representative (Chair July 2021 - June 2023;  Term July 2019 - June 2024)
Nimmi Arunachalam
At Large Representative, (July 2022 - June 2024)
Greg Bianchi
Partner Representative, Microsoft (July 2021 - June 2023)
Cindi Chang
State Department Representative (July 2022 - June 2024)
Charity Freeman
Board Chair-Elect, Teacher Education Representative (July 2022 - June 2026)
Michelle Friend
At-Large Representative (July 2021 - June 2023)
Abigail Joseph
K-8 Teacher Representative (July 2022 - June 2024)
Audra Kaplan
K-8 Representative (July 2021 - June 2023)
Richard Ladner
University Representative (July 2022 - June 2024)
Art Lopez
9–12 Representative (July 2021 - June 2023)
Yolanda Lozano
9-12 Teacher Representative, (July 2022 - June 2024)
Andrew McGettrick
ACM Representative, (July 2022 - June 2024)
Michelle Page
Treasurer (July 2022- June 2024)

CSTA Committees include: 
Computer science education in the United Kingdom is carried out in the UK mostly from the age from 11, with most computer scientists needing a university degree also; from 11 and beyond, it is a predominantly male subject.
In their teenage years, around 3% of girls are interested in computing as a career, as opposed to 17% of boys.
Secondary schools taught logic, hardware and binary up to the age of 16 together with the programming language BASIC.
Computer science was taught much less across schools up to 16. Computer science was largely only taught from 16 to 18.
Computer science was infrequently taught in schools up to the age of 16.
The 2010 general election would result in a swift change in education policy on computer science education across England. The subject had not been taught as widespread as it could have been, and much more emphasis would now be placed on developing hard-core computing skills, and for primary schools too.
In January 2012 the Royal Society published a report entitled Shut down or restart? The way forward for computing in UK schools. Also in 2012, Code Club was founded; another group initiative is CoderDojo.
From 2014 a new PGCE in Computing has been offered by UK universities.
From September 2014 in England, computing teaching was now compulsory from the age of 5. Computer science GCSE and A levels have been made more rigorous. From around 2014 the new Computing GCSE has been taken.
In November 2018 the government-funded National Centre for Computing Education was founded at the University of York, to coordinate training for computing teachers in England.
The Institute of Coding was launched in 2018.
Computing teaching is mandatory at English schools from ages 5-16.[1] There are around 438,000 teachers in England, with around 18,000 computing teachers; only around 35% have a relevant degree. 
Education Scotland introduced its Curriculum for Excellence -Technologies in 2010. Secondary school starts at the age of 12 in Scotland. 
Wales introduced its Curriculum for Life in September 2018.
The Northern Ireland Curriculum features computer science to a lesser extent than now found in England.
There are around 21,000 primary schools across the UK. 
Teaching applications at primary level are Scratch, PICAXE, Micro Bit and Kodu Game Lab.
There are approximately 4,000 secondary schools throughout the UK. 
Secondary schools develop applications most (21%) in Python, followed by Scratch (19%).
There are around 20% female candidates of Computing GCSE, with around 65,000 total candidates in 2017. Four times the proportion of girls choose computing GCSE at girls schools, as opposed to girls at co-educational secondary schools.
Teacher development is offered through the Computing At School Network of Excellence, run by universities. 
9% of Computing A-level candidates are female. In 2017 there were around 8,300 total candidates. Numbers of candidates went down from around 5,600 in 2007 to around 3,800 in 2012, but numbers have been steadily rising since 2012.
For Scotland, Advanced Highers Computing has 14% female candidates. In 2017 there were around 650 total Computing candidates.
For English universities around 12% of first degree entrants are female.
There are around 500 applications a year for UCAS Teacher Training in Computing.
Around 16,500 applied to study computing at university in 2003; by 2007 it was around 10,600.
Computer science in sport is an interdisciplinary discipline that has its goal in combining the theoretical as well as practical aspects and methods of the areas of informatics and sport science. The main emphasis of the interdisciplinarity is placed on the application and use of computer-based but also mathematical techniques in sport science, aiming in this way at the support and advancement of theory and practice in sports.[1] The reason why computer science has become an important partner for sport science is mainly connected with "the fact that the use of data and media, the design of models, the analysis of systems etc. increasingly requires the support of suitable tools and concepts which are developed and available in computer science".[2]
Going back in history, computers in sports were used for the first time in the 1960s, when the main purpose was to accumulate sports information. Databases were created and expanded in order to launch documentation and dissemination of publications like articles or books that contain any kind of knowledge related to sports science. Until the mid-1970s also the first organization in this area called IASI (International Association for Sports Information) was formally established. Congresses and meetings were organized more often with the aim of standardization and rationalization of sports documentation. Since at that time this area was obviously less computer-oriented, specialists talk about sports information rather than sports informatics when mentioning the beginning of this field of science.
Based on the progress of computer science and the invention of more powerful computer hardware in the 1970s, also the real history of computer science in sport began.[3] This was as well the first time when this term was officially used and the initiation of a very important evolution in sports science.
In the early stages of this area statistics on biomechanical data, like different kinds of forces or rates, played a major role. Scientists started to analyze sports games by collecting and looking at such values and features in order to interpret them. Later on, with the continuous improvement of computer hardware - in particular microprocessor speed – many new scientific and computing paradigms were introduced, which were also integrated in computer science in sport. Specific examples are modeling as well as simulation, but also pattern recognition, and design.
As another result of this development, the term 'computer science in sport' has been added in the encyclopedia of sports science in 2004.
The importance and strong influence of computer science as an interdisciplinary partner for sport and sport science is mainly proven by the research activities in computer science in sport. The following IT concepts are thereby of particular interest:
Based on the fields from above, the main areas of research in computer science in sport include amongst others:
A clear demonstration for the evolution and propagation towards computer science in sport is also the fact that nowadays people do research in this area all over the world. Since the 1990s many new national and international organizations regarding the topic of computer science in sport were established. These associations are regularly organizing congresses and workshops with the aim of dissemination as well as exchange of scientific knowledge and information on all sort of topics regarding the interdisciplinary discipline.
As a first example, in Australia and New Zealand scientists have built up the MathSport group of ANZIAM (Australia and New Zealand Industrial and Applied Mathematics), which since 1992 organizes biennial meetings, initially under the name "Mathematics and Computers in Sport Conferences", and now "MathSport".[4] Main topics are mathematical models and computer applications in sports, as well as coaching and teaching methods based on informatics.
The European community was also among the leading motors of the emergence of the field. Some workshops on this topic were successfully organized in Germany since the late 1980s. In 1997 the first international meeting on computer science in sport was held in Cologne. The main aim was to spread out and share applications, ideas and concepts of the use of computers in sports, which should also make a contribution to the creation of internationalization and thus to boost research work in this area.
Since then, such international symposia took place every two years all over Europe. As the first conferences were a raving success, it was decided to go even further and the foundation of an organization was the logical consequence. This step was accomplished in 2003, when the International Association of Computer Science in Sport (IACSS) was established during the 4th international symposium in Barcelona, when Prof. Jürgen Perl was also chosen as the first president. A few years earlier, the first international e-journal on this topic (International Journal of Computer Science in Sport) was released already. The internationalization is confirmed moreover by the fact that three conferences already took place outside of Europe - in Calgary (Canada) in 2007, Canberra (Australia) in 2009 and Shanghai (China) in 2011. During the symposium in Calgary additionally the president position changed - it has been assigned to Prof. Arnold Baca, who has been re-elected in 2009 and 2011. The following Symposia on Computer Science in Sport took place in Europe again, in Istanbul (Turkey) in 2013 and in Loughborough (UK) in 2015. In 2017 the 11th Symposium of Computer Science in Sport took place in Constance (Germany). During the conference in Istanbul Prof. Martin Lames was elected as president of the IACSS. He was re-elected in 2015, 2017 and 2019.
The 12th International Symposium of Computer Science in Sports was held in Moscow (Russia) from 8 to 10 July 2019: https://iacss2019.ru/
In addition to the international associations from above, currently the following national associations on computer science in sport exist (if available, the web addresses are also given):
Computer Science is a peer-reviewed scientific journal published by the AGH University of Science and Technology (Kraków Poland) and edited by faculty members of the Departments of Computer Science and Automatics. The journal was established in 1999 and since beginning of 2012 is published quarterly. The editor-in-chief is Jacek Kitowski.
The journal publishes articles covering all aspects of theoretical and applied computer science problems.
Occasionally the journal will publish special issues containing articles based on presentations at selected conferences.[1][2][3][4]
Scoring assigned by the Polish Ministry of Science and Higher Education, as one of important factors used to evaluate research facilities in Poland, had following
values for Computer Science journal:
Computer science is one of several academic events sanctioned by the University Interscholastic League (UIL).
Computer science is designed to test students' programming abilities. It is not the same as the computer applications contest, which tests students' abilities to use word processing, spreadsheet, and database applications software, including integration of applications.
Computer science began during the 1990-91 scholastic year as strictly a team event. It was not scored as an individual event until the 1996-97 school year.
Students in Grade 9 through Grade 12 are eligible to enter this event.
Each school may send up to four students. However, in districts with eight or more schools the number of students per school may be limited to three. In order for the school to compete in the team competition the school must send three students.
The contest consists of two parts, a written test and a programming exercise. 
On the written test, 45 minutes are allotted. No time warnings are given, but at the end of the 45 minutes the student may finish completing an answer. Six points are given for each correct answer; two points are deducted for each incorrect answer. Skipped or unanswered questions are not scored.
On the programming test, two hours are allotted. The solution is graded as correct or incorrect with points assigned for each problem. However, incorrect solutions may be reworked by the team. Any commercially available computer may be used in the competition. The programming language to be used is limited to Java and the compiler used for the contest will be the  Oracle Java Development Kit; specific acceptable versions are determined by the UIL prior to each school year.
The top three individuals and the top team will advance to the next round. In addition, within each region, the highest-scoring second place team from all district competitions advances as the "wild card" to regional competition, and within the state, the highest-scoring second place team from all regional competitions advances as the wild card to the state competition. Members of advancing teams who did not place individually remain eligible to compete for individual awards at higher levels.
For individual competition (overall and for each subsection), the tiebreaker is percent accuracy (number of problems answered correctly divided by number of problems attempted, defined as any question with a mark or erasure in the answer blank). In the event a tie remains, all remaining individuals will advance.
For the team competition the first tiebreaker is the programming score, then the written exam score (using the total score tiebreaker system used at the district level). If a tie still exists, all remaining tied teams will advance or place.
For district meet academic championship and district meet sweepstakes awards, points are awarded to the school as follows:
NOTE: For privacy reasons, only the winning school is shown. Computer Science was strictly a team event until the 1996-97 school year. [1]
[2]
[3]
NOTE: The 1990-91 contest was limited to Class AAAA and Class AAAAA only; other classifications were not added until the 1991-92 year. The AAAAAA classification was not added until the 2014-2015 year.[1]
Clements HS (Sugar Land)
[4]
[5]
|}
The Computer Science High School of Bicolandia, also referred to by its acronym CSHSB, is an information and communications technology (ICT) and junior high school in the capital town of Pili, Camarines Sur, Philippines. 
Founded in 2008, it is a previously university-administered high school under the Central Bicol State University of Agriculture until 2015. At present, the school operates under the Department of Education with a specialized curriculum for ICT.
The Computer Science High School of Bicolandia (CSHSB) was founded in 2008. The establishment was by way of R.A. No. 10284 in the Congress of the Philippines.[1] It was initially named as "Bicolandia ICT-Oriented High School". A few months later after its foundation, the name of the school had been changed to its current name.
This special program was initiated by the actions of then Congressman of the Third District of Camarines Sur, Luis R. Villafuerte, in collaboration with Central Bicol State University of Agriculture, under the administration of its first University President, Atty. Marito T. Bernales.[2]
Through the help of the late Mayor Alexis San Luis, top elementary graduate students across the capital town of Pili, Camarines Sur were invited to take the school's first entrance examination on 2008. The original intake was supposedly the top 70 students of the entrance examination and interview until it was decided to add another two slots as approved by the school's administration.
The 72 students were known as part of the pioneer batch of CSHSB. They were the first recipients of free education and other educational benefits as sponsored by the then congressman. The first sections of the school were named as I-Unity and I-Harmony. It was in 2009 when the current CSHSB Building had been used and also the start of using the “A” and “P” sections. The school has two or three sections per year level ever since its establishment.
The school is a university-administered high school for seven years. It was initially administered from the Institute of Arts and Sciences (now the College of Arts and Sciences), until it was later transferred to the College of Development Education. During the school year 2011-2012, the levels were completed from first year to fourth year. It was in 2012 when the CSHSB produced its very own pioneer graduates.
In 2015, the administration of the school marked its start under the Department of Education, which is formerly with its home university Central Bicol State University of Agriculture. With the implementation of the K to 12 Basic Education Program by the Aquino Administration, the school completely operated as a junior high school starting the school year 2015-2016.
At present, CSHSB is a popular school of choice among elementary graduates from the town of Pili and the rest of Camarines Sur. The school requires passing an entrance examination followed by an interview for all prospective students.[3] The top applicants will comprise the sections of Grade 7 which are the 7-Symbian, 7-Oracle, and 7-Android. 
Except for Grade 10 which has two (2) sections, the other grade levels have three (3) sections each.[4] The current names of each sections for every grade levels are listed below.
The school's specialized ICT curriculum provides technical know-how on Computer Programming, Computer Animation, Computer Networking, Computer Troubleshooting, Web Development and other Computer Courses, for its Grade 7 up to Grade 10 students. It has two air-conditioned Computer laboratories kept with 1:1 student-computer ratio.
Along with the said specialized subject offerings, subjects like English, Math, Science, Filipino, Social Studies, Values Education, and MAPEH (Music, Arts, Physical Education and Health) are also offered for Grades 7 to 10. On the other hand, subjects like Technical Writing and Statistics, and advance lessons in Mathematics and Science are being taught in Grade 8 level while Research is offered for Grade 8 and Grade 9 students.
Meanwhile, additional skills like culinary, driving, swimming, and music will also be integrated to some related subjects.

